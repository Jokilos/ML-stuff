
loop-aarch64-x64.o:     file format elf64-x86-64
loop-aarch64-x64.o
architecture: i386:x86-64, flags 0x00000010:
HAS_SYMS
start address 0x0000000000000000

Sections:
Idx Name          Size      VMA               LMA               File off  Algn
  0 .text         0000006d  0000000000000000  0000000000000000  00000298  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000000  0000000000000000  0000000000000000  000000b0  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000000  0000000000000000  0000000000000000  000000b0  2**0
                  ALLOC
  3 .comment      00000013  0000000000000000  0000000000000000  000000b0  2**0
                  CONTENTS, READONLY
  4 .note.GNU-stack 00000000  0000000000000000  0000000000000000  000000c3  2**0
                  CONTENTS, READONLY

Disassembly of section .text:

0000000000000000 <fib>:
   0:	55                   	push   %rbp
   1:	48 89 e5             	mov    %rsp,%rbp
   4:	48 83 ec 30          	sub    $0x30,%rsp
   8:	89 7c 24 1c          	mov    %edi,0x1c(%rsp)
   c:	c7 44 24 2c 00 00 00 	movl   $0x0,0x2c(%rsp)
  13:	00 
  14:	bf 01 00 00 00       	mov    $0x1,%edi
  19:	89 7c 24 28          	mov    %edi,0x28(%rsp)
  1d:	c7 44 24 24 00 00 00 	movl   $0x0,0x24(%rsp)
  24:	00 
  25:	eb 52                	jmp    79 <$d+0x65>
  27:	8b 74 24 2c          	mov    0x2c(%rsp),%esi
  2b:	8b 7c 24 28          	mov    0x28(%rsp),%edi
  2f:	01 f7                	add    %esi,%edi
  31:	89 7c 24 20          	mov    %edi,0x20(%rsp)
  35:	8b 7c 24 28          	mov    0x28(%rsp),%edi
  39:	89 7c 24 2c          	mov    %edi,0x2c(%rsp)
  3d:	8b 7c 24 20          	mov    0x20(%rsp),%edi
  41:	89 7c 24 28          	mov    %edi,0x28(%rsp)
  45:	8b 7c 24 24          	mov    0x24(%rsp),%edi
  49:	89 7c 24 20          	mov    %edi,0x20(%rsp)
  4d:	8b 7c 24 20          	mov    0x20(%rsp),%edi
  51:	83 c7 01             	add    $0x1,%edi
  54:	89 7c 24 24          	mov    %edi,0x24(%rsp)
  58:	8b 74 24 24          	mov    0x24(%rsp),%esi
  5c:	8b 7c 24 1c          	mov    0x1c(%rsp),%edi
  60:	39 fe                	cmp    %edi,%esi
  62:	7c 1e                	jl     82 <$d+0x6e>
  64:	8b 7c 24 2c          	mov    0x2c(%rsp),%edi
  68:	48 89 f8             	mov    %rdi,%rax
  6b:	c9                   	leave
  6c:	c3                   	ret
